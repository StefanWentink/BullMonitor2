// <auto-generated />
using System;
using BullMonitor.Data.Sql.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BullMonitor.Data.Sql.Migrations
{
    [DbContext(typeof(TickerContext))]
    [Migration("20231024100625_TickerKnownBy")]
    partial class TickerKnownBy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.CurrencyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.ExchangeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Exchange", (string)null);
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.IndustryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SectorId");

                    b.ToTable("Industry", (string)null);
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.SectorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Sector", (string)null);
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.TickerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExchangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("KnownByTipRanks")
                        .HasColumnType("bit");

                    b.Property<bool?>("KnownByZacks")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ExchangeId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("IndustryId");

                    b.ToTable("Ticker", (string)null);
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.IndustryEntity", b =>
                {
                    b.HasOne("BullMonitor.Data.Storage.Models.SectorEntity", "Sector")
                        .WithMany("Industries")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.TickerEntity", b =>
                {
                    b.HasOne("BullMonitor.Data.Storage.Models.CurrencyEntity", "Currency")
                        .WithMany("Tickers")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BullMonitor.Data.Storage.Models.ExchangeEntity", "Exchange")
                        .WithMany("Tickers")
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BullMonitor.Data.Storage.Models.IndustryEntity", "Industry")
                        .WithMany("Tickers")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Exchange");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.CurrencyEntity", b =>
                {
                    b.Navigation("Tickers");
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.ExchangeEntity", b =>
                {
                    b.Navigation("Tickers");
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.IndustryEntity", b =>
                {
                    b.Navigation("Tickers");
                });

            modelBuilder.Entity("BullMonitor.Data.Storage.Models.SectorEntity", b =>
                {
                    b.Navigation("Industries");
                });
#pragma warning restore 612, 618
        }
    }
}
